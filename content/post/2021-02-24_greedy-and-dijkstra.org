---
title: "理解贪心算法与dijkstra算法"
date: 2021-02-24T10:52:06+08:00
draft: false
categories: ['learning']
tags: ['algorithm']
cover: '2021-03-01_greedy.jpg'
---
* 贪心与动态规划
  我们知道动态规划求解的问题需要具有 1. 最优子结构 2. 重复子问题 
  具有最优子结构的问题有时也可以用贪心算法求解。条件是最优解中只包含一个子问题的最优解，而一般的动态规划
  最优解包含多个子问题的最优解。比如fib算法，fib(5)需要fib(4)与fib(3)两个子问题的解，无法使用贪心算法。
  阶乘算法factorial(5)的递归解只需要使用一个子问题factorial(4)的解，这种情况使用贪心算法，即无需自底向上
  记录每一子问题的解，只需记录当前最近一子问题的解用于求解当前解。

  一个更直观的例子是0-1背包问题和部分背包问题。背包问题要求在指定的一些商品中选出能装入背包重量的最大价值的商品
  组合。0-1背包问题中的每个商品是一个整体，要么整个装入，要么不装。部分背包问题里的商品类似水或金沙，可以分割后
  装入部分。0-1背包问题是典型的动态规划例子，部分背包是贪心。

  我们容易得到背包问题的最优子结构
